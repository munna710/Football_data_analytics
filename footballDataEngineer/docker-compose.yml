version: '3'

services:
  webserver:
    image: apache/airflow:2.6.0-python3.9
    command: bash -c " \
      if [ -e /opt/airflow/requirements.txt ]; then \
        $(command -v pip) install --user -r /opt/airflow/requirements.txt; \
      fi && \
      if [ ! -f /opt/airflow/airflow.db ]; then \
        airflow db init && \
        airflow users create \
          --username admin \
          --firstname admin \
          --lastname admin \
          --role Admin \
          --email admin@airscholar.com \
          --password admin; \
      fi && \
      $(command -v airflow) db upgrade && \
      exec airflow webserver"
    depends_on:
      - postgres
    environment:
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__WEBSERVER_BASE_URL=http://localhost:8080
      - AIRFLOW__WEBSERVER__SECRET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
    logging:
      options:
        max-size: 10m
        max-file: "3"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./requirements.txt:/opt/airflow/requirements.txt
      - ./data:/opt/airflow/data
      - ./pipelines:/opt/airflow/pipelines
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - confluent

  postgres:
    image: postgres:14.0
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    logging:
      options:
        max-size: 10m
        max-file: "3"
    networks:
      - confluent

  scheduler:
    image: apache/airflow:2.6.0-python3.9
    depends_on:
      webserver:
        condition: service_healthy
    volumes:
      - ./dags:/opt/airflow/dags
      - ./requirements.txt:/opt/airflow/requirements.txt
      - ./data:/opt/airflow/data
      - ./pipelines:/opt/airflow/pipelines
    environment:
      - LOAD_EX=n
      - EXECUTOR=Sequential
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__WEBSERVER_BASE_URL=http://localhost:8080
      - AIRFLOW__WEBSERVER__SECRET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
    command: bash -c " \
      if [ -e /opt/airflow/requirements.txt ]; then \
        $(command -v pip) install --user -r /opt/airflow/requirements.txt; \
      fi && \
      $(command -v airflow) db upgrade && \
      exec airflow scheduler"
    networks:
      - confluent

networks:
  confluent:
